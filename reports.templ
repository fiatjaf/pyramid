package main

import (
	"fiatjaf.com/nostr"
	"fiatjaf.com/nostr/nip19"
	"github.com/fiatjaf/pyramid/global"
	"iter"
)

templ reportsPage(reports iter.Seq[nostr.Event], loggedUser nostr.PubKey) {
	@layout(loggedUser) {
		<div class="max-w-3xl mx-auto">
			<div class="space-y-4">
				for report := range reports {
					<div>
						if e := report.Tags.Find("e"); e != nil {
							if id, err := nostr.IDFromHex(e[1]); err == nil {
								for target := range global.Nostr.Store.QueryEvents(nostr.Filter{IDs: []nostr.ID{id}}, 1) {
									@eventReportComponent(e, target, report)
								}
							}
						} else if p := report.Tags.Find("p"); p != nil {
							@profileReportComponent(p, report)
						}
					</div>
				}
			</div>
		</div>
	}
}

templ eventReportComponent(e nostr.Tag, target nostr.Event, report nostr.Event) {
	<div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-lg rounded-2xl shadow-lg border border-gray-200/50 dark:border-gray-700/50 p-6 hover:shadow-xl transform hover:-translate-y-1">
		<div class="flex justify-between items-start mb-3">
			<div class="flex items-center gap-2">
				<span class="bg-red-100 dark:bg-red-900/30 text-red-600 dark:text-red-400 px-3 py-1 rounded-full text-sm font-semibold">ðŸ“¢</span>
				<div>
					<span class="font-semibold text-gray-800 dark:text-gray-100">
						if len(e) >= 3 {
							{ e[2] }
						}
					</span>
					<span class="text-gray-600 dark:text-gray-400">{ " report" }</span>
				</div>
			</div>
			<div class="text-sm text-gray-500 dark:text-gray-400">
				{ report.CreatedAt.Time().Format("Jan 2, 2006 3:04 PM") }
			</div>
		</div>
		<div class="text-sm text-gray-600 dark:text-gray-400">by <a class="hover:underline text-blue-600 dark:text-blue-400" title={ report.PubKey.Hex() } href={ templ.SafeURL("nostr:" + nip19.EncodeNpub(report.PubKey)) }><nostr-name pubkey={ report.PubKey.Hex() }></nostr-name></a></div>
		if report.Content != "" {
			<div class="mt-4 p-4 bg-gray-50/50 dark:bg-gray-900/50 rounded-xl text-gray-700 dark:text-gray-300">{ report.Content }</div>
		}
		<div class="mt-4">
			<div class="text-sm font-semibold text-gray-600 dark:text-gray-400 mb-2">event reported:</div>
			<div class="font-mono text-xs bg-gray-50/50 dark:bg-gray-900/50 p-3 rounded-xl overflow-auto whitespace-pre-wrap break-all text-gray-700 dark:text-gray-300">{ target.String() }</div>
		</div>
	</div>
}

templ profileReportComponent(p nostr.Tag, report nostr.Event) {
	<div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-lg rounded-2xl shadow-lg border border-gray-200/50 dark:border-gray-700/50 p-6 hover:shadow-xl transform hover:-translate-y-1">
		<div class="flex justify-between items-start mb-3">
			<div class="flex items-center gap-2">
				<span class="bg-orange-100 dark:bg-orange-900/30 text-orange-600 dark:text-orange-400 px-3 py-1 rounded-full text-sm font-semibold">ðŸ‘¤</span>
				<div>
					<span class="font-semibold text-gray-800 dark:text-gray-100">
						if len(p) >= 3 {
							{ p[2] }
						}
					</span>
					<span class="text-gray-600 dark:text-gray-400">{ " report" }</span>
				</div>
			</div>
			<div class="text-sm text-gray-500 dark:text-gray-400">
				{ report.CreatedAt.Time().Format("Jan 2, 2006 3:04 PM") }
			</div>
		</div>
		<div class="text-sm text-gray-600 dark:text-gray-400">by <a class="hover:underline text-blue-600 dark:text-blue-400" title={ report.PubKey.Hex() } href={ templ.SafeURL("nostr:" + nip19.EncodeNpub(report.PubKey)) }><nostr-name pubkey={ report.PubKey.Hex() }></nostr-name></a></div>
		if report.Content != "" {
			<div class="mt-4 p-4 bg-gray-50/50 dark:bg-gray-900/50 rounded-xl text-gray-700 dark:text-gray-300">{ report.Content }</div>
		}
		<div class="mt-4">
			<div class="text-sm font-semibold text-gray-600 dark:text-gray-400 mb-2">profile reported:</div>
			<div class="p-3 bg-gray-50/50 dark:bg-gray-900/50 rounded-xl">
				{{ targetP, _ := nostr.PubKeyFromHex(p[1]) }}
				<a href={ templ.URL("nostr:" + nip19.EncodeNpub(targetP)) } target="_blank" class="text-sm hover:underline text-blue-600 dark:text-blue-400">
					<nostr-name pubkey={ targetP.Hex() }></nostr-name>
				</a>
			</div>
		</div>
	</div>
}

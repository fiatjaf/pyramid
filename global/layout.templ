package global

import "fiatjaf.com/nostr"

var GroupsRelayEnabled = false

templ Layout(loggedUser nostr.PubKey) {
	<!DOCTYPE html>
	<html
		if Settings.HasThemeColors() {
			style={ templ.SafeCSS("--accent-color:" + Settings.AccentColor + ";" +
				"--bg-color:" + Settings.BackgroundColor + ";" +
				"--text-color:" + Settings.TextColor + ";") }
		} else {
			x-data="{ darkMode: localStorage.getItem('darkMode') === 'true' }"
			x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))"
			:class="{ 'dark': darkMode }"
		}
	>
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<title>{ S.RelayName }</title>
			<script src="https://cdn.tailwindcss.com"></script>
			<script>tailwind.config = { darkMode: 'class' }</script>
			<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
			<script src="https://cdn.jsdelivr.net/npm/nostr-web-components@0.0.12/dist/nostr-name.js"></script>
		</head>
		<body
			class={ "min-h-screen flex flex-col",
			templ.KV("bg-[var(--bg-color)]", Settings.HasThemeColors()),
			templ.KV("bg-stone-50 dark:bg-stone-900 text-stone-900 dark:text-stone-100", !Settings.HasThemeColors()) }
		>
			<header class="bg-white/60 dark:bg-stone-800/90 backdrop-blur-sm sticky top-0 z-50 shadow-sm border-b border-stone-300 transition-colors">
				<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
					<div class="flex items-center justify-between py-6">
						<div class="flex-1">
							<h1
								class={ "font-bold text-3xl transition-colors",
									templ.KV("text-[var(--accent-color)]", Settings.HasThemeColors()),
									templ.KV("text-blue-600 dark:text-blue-400", !Settings.HasThemeColors()) }
							>{ S.RelayName }</h1>
							if S.RelayDescription != "" {
								<p class="text-sm text-stone-600 dark:text-stone-400 mt-1">{ S.RelayDescription }</p>
							}
						</div>
						if !Settings.HasThemeColors() {
							<button @click="darkMode = !darkMode" class="ml-4 p-2.5 rounded-lg bg-stone-100 hover:bg-stone-200 dark:bg-stone-700 dark:hover:bg-stone-600" aria-label="Toggle dark mode">
								<svg x-show="darkMode" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path></svg>
								<svg x-show="!darkMode" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>
							</button>
						}
					</div>
					<nav class="flex flex-wrap gap-2 items-center justify-center pb-4">
						<a
							href="/"
							class={
								"rounded-lg px-4 py-2 font-medium",
								templ.KV("text-[var(--text-color)]", Settings.HasThemeColors()),
								templ.KV("hover:bg-stone-100 dark:hover:bg-stone-700", !Settings.HasThemeColors()),
							}
						>invite tree</a>
						<a
							target="_blank"
							id="browse-link"
							href={ Settings.BrowseURI }
							class={
								"rounded-lg px-4 py-2 font-medium",
								templ.KV("text-[var(--text-color)]", Settings.HasThemeColors()),
								templ.KV("hover:bg-stone-100 dark:hover:bg-stone-700", !Settings.HasThemeColors()),
							}
						>browse</a>
						<a
							href="/reports"
							class={
								"rounded-lg px-4 py-2 font-medium",
								templ.KV("text-[var(--text-color)]", Settings.HasThemeColors()),
								templ.KV("hover:bg-stone-100 dark:hover:bg-stone-700", !Settings.HasThemeColors()),
							}
						>reports</a>
						<a
							href="/favorites"
							class={
								"rounded-lg px-4 py-2 font-medium",
								templ.KV("text-[var(--text-color)]", Settings.HasThemeColors()),
								templ.KV("hover:bg-stone-100 dark:hover:bg-stone-700", !Settings.HasThemeColors()),
							}
						>favorites</a>
						<a
							href="/internal"
							class={
								"rounded-lg px-4 py-2 font-medium",
								templ.KV("text-[var(--text-color)]", Settings.HasThemeColors()),
								templ.KV("hover:bg-stone-100 dark:hover:bg-stone-700", !Settings.HasThemeColors()),
							}
						>internal</a>
						if GroupsRelayEnabled {
							<a
								href="/groups"
								class={
									"rounded-lg px-4 py-2 font-medium",
									templ.KV("text-[var(--text-color)]", Settings.HasThemeColors()),
									templ.KV("hover:bg-stone-100 dark:hover:bg-stone-700", !Settings.HasThemeColors()),
								}
							>groups</a>
						}
						if loggedUser == Master {
							<a
								href="/settings"
								class={
									"rounded-lg px-4 py-2 font-medium",
									templ.KV("text-[var(--text-color)]", Settings.HasThemeColors()),
									templ.KV("hover:bg-stone-100 dark:hover:bg-stone-700", !Settings.HasThemeColors()),
								}
							>settings</a>
						}
						<button
							@click="handleAuth($el)"
							class={
								"px-4 py-2 rounded-lg font-semibold text-white shadow-md hover:shadow-lg",
								templ.KV("bg-[var(--accent-color)]", Settings.HasThemeColors()),
								templ.KV("bg-blue-500 hover:bg-blue-600", !Settings.HasThemeColors()),
							}
						>
							if loggedUser != nostr.ZeroPK {
								logout
							} else {
								login
							}
						</button>
					</nav>
				</div>
			</header>
			<main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 flex-grow">
				{ children... }
			</main>
			<footer class="mt-auto bg-white/50 dark:bg-stone-800/50 backdrop-blur-sm border-t border-stone-300 transition-colors">
				<div class="max-w-7xl mx-auto px-4 py-6 text-center">
					<p class="text-sm text-stone-600 dark:text-stone-400">
						powered by
						<a
							target="_blank"
							href="https://github.com/fiatjaf/pyramid"
							if Settings.HasThemeColors() {
								class="text-[var(--accent-color)]"
							} else {
								class="text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300"
							}
						>pyramid</a>
					</p>
				</div>
			</footer>
			<script>window.wnjParams = { position: 'bottom', startHidden: true, compactMode: true }</script>
			<script src="https://cdn.jsdelivr.net/npm/window.nostr.js@0.4.7/dist/window.nostr.min.js"></script>
			<script>
				function getCookie(name) {
					const value = `; ${document.cookie}`;
					const parts = value.split(`; ${name}=`);
					if (parts.length === 2) return parts.pop().split(';').shift();
				}

				function setCookie(name, value) {
					document.cookie = `${name}=${value}; path=/`;
				}

				function clearCookie(name) {
					document.cookie = `${name}=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT`;
				}

				// update browse link with current host
				const browseLink = document.getElementById('browse-link');
				browseLink.href = browseLink.href.replace('{url}', encodeURIComponent(location.href.replace('http', 'ws').split('/').slice(0, 3).join('/')));

				async function handleAuth(el) {
					const isLogin = el.innerText.toLowerCase() === 'login';
					if (isLogin) {
						try {
							const event = await window.nostr.signEvent({
								created_at: Math.round(Date.now() / 1000),
								kind: 27235,
								tags: [['domain', location.host]],
								content: ''
							});
							setCookie('nip98', JSON.stringify(event));
						} catch (e) {
							console.error('login failed:', e);
							return;
						}
					} else {
						clearCookie('nip98');
					}
					location.reload();
				}
			</script>
		</body>
	</html>
}

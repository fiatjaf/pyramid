package main

import (
	"slices"

	"fiatjaf.com/nostr"

	"github.com/fiatjaf/pyramid/global"
	"github.com/fiatjaf/pyramid/layout"
	"github.com/fiatjaf/pyramid/whitelist"
)

templ inviteTreePage(loggedUser nostr.PubKey) {
	@layout.Layout(loggedUser, "invite-tree") {
		<div class="max-w-3xl mx-auto">
			if whitelist.CanInviteMore(loggedUser) {
				<form
					method="post"
					action="/action"
					class="flex items-center gap-3 mb-6"
				>
					<label
						class="text-sm font-medium"
						if global.Settings.HasThemeColors() {
							class="text-[var(--text-color)]"
						} else {
							class="text-gray-700 dark:text-gray-300"
						}
					>invite new member: </label>
					<input
						type="text"
						name="target"
						placeholder="npub1..."
						class="flex-1 rounded-lg border-0 px-3 py-1.5 text-sm text-gray-900 dark:text-gray-100 dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-500 focus:ring-2 focus:ring-inset focus:ring-blue-600 dark:focus:ring-blue-400"
					/>
					<input type="hidden" name="type" value="invite"/>
					<button
						type="submit"
						class={
							"rounded-lg px-4 py-1.5 text-sm font-semibold text-white shadow-lg transform hover:scale-105",
							templ.KV("bg-[var(--accent-color)]", global.Settings.HasThemeColors()),
							templ.KV("bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600", !global.Settings.HasThemeColors()),
						}
					>
						invite
					</button>
				</form>
			}
			<div
				if global.Settings.HasThemeColors() {
					class="text-[var(--text-color)]"
				} else {
					class="text-gray-700 dark:text-gray-300"
				}
			>
				@inviteTreeComponent(nostr.ZeroPK, loggedUser)
			</div>
		</div>
	}
}

templ inviteTreeComponent(curr nostr.PubKey, loggedUser nostr.PubKey) {
	<ul>
		for pubkey, parents := range whitelist.Whitelist {
			if slices.Contains(parents, curr) {
				<li class="ml-6 py-1 group">
					<div class="flex items-center gap-2">
						<span
							if global.Settings.HasThemeColors() {
								class="text-gray-700 hover:text-gray-500"
							} else {
								class="text-gray-700 dark:text-gray-300 hover:text-gray-500 dark:hover:text-gray-400"
							}
						>
							<a
								href={ templ.URL("https://njump.me/p/" + pubkey.Hex()) }
								target="_blank"
								class="font-mono text-sm"
							>
								<nostr-name pubkey={ pubkey.Hex() } class="text-lg">{ pubkey.Hex() }</nostr-name>
							</a>
							if slices.Contains(parents, nostr.ZeroPK) {
								<span
									class={
										"cursor-default ml-2 inline-flex items-center rounded-md px-2 py-1 text-xs font-medium",
										templ.KV("bg-[var(--accent-color)] text-white", global.Settings.HasThemeColors()),
										templ.KV("bg-blue-50 text-blue-700 ring-1 ring-inset ring-blue-600/20 dark:bg-blue-900/20 dark:text-blue-400 dark:ring-blue-500/20", !global.Settings.HasThemeColors()),
									}
								>
									root
								</span>
							}
						</span>
						if whitelist.IsAncestorOf(loggedUser, pubkey) && loggedUser != nostr.ZeroPK {
							<form method="post" action="/action" class="inline">
								<input type="hidden" name="target" value={ pubkey.Hex() }/>
								<input type="hidden" name="type" value="drop"/>
								<button
									type="submit"
									onclick="return confirm('really drop this user and its descendants?')"
									class="opacity-40 hover:opacity-100 rounded-lg text-xs font-semibold px-3 py-1 bg-gray-500/10 hover:bg-red-500/10 hover:text-red-500 text-gray-600 dark:text-gray-400"
								>
									drop
								</button>
							</form>
						}
					</div>
					@inviteTreeComponent(pubkey, loggedUser)
				</li>
			}
		}
	</ul>
}

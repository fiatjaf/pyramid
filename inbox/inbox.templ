package inbox

import (
	"fiatjaf.com/nostr"

	"github.com/fiatjaf/pyramid/global"
	"github.com/fiatjaf/pyramid/layout"
	"github.com/fiatjaf/pyramid/pyramid"
)

templ inboxPage(loggedUser nostr.PubKey) {
	@layout.Layout(loggedUser, "inbox") {
		<div class="max-w-3xl mx-auto">
			<div class="space-y-4 text-gray-700 dark:text-gray-300">
				<p class="text-lg leading-relaxed">
					filtered notifications for relay members using unified web of trust filtering. only see mentions from people in your extended network.
				</p>
				<div class="bg-blue-50/50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-xl p-4">
					<h2 class="font-semibold text-gray-800 dark:text-gray-100 mb-2">what gets through:</h2>
					<ul class="list-disc list-inside space-y-1 text-sm">
						<li>events that mention relay members</li>
						<li>from people in extended network</li>
						<li>no hellthreads</li>
					</ul>
				</div>
				<div class="bg-purple-50/50 dark:bg-purple-900/20 border border-purple-200 dark:border-purple-800 rounded-xl p-4">
					<h2 class="font-semibold text-gray-800 dark:text-gray-100 mb-2">secure messages:</h2>
					<p class="text-sm">
						supports encrypted messages (kinds 1059, 7375, 7376) stored separately for privacy.
					</p>
				</div>
				if pyramid.IsRoot(loggedUser) {
					<div class="mt-8">
						<h3 class="text-lg font-semibold mb-4 dark:text-stone-200">inbox configuration</h3>
						if !global.Settings.Inbox.Enabled {
							<form method="POST" action="/inbox/enable">
								<button
									type="submit"
									class="px-4 py-2 rounded bg-stone-200 hover:bg-stone-300 dark:bg-stone-700 dark:hover:bg-stone-600 text-stone-700 dark:text-stone-300 font-medium"
								>
									enable
								</button>
							</form>
						} else {
							<form method="POST" action="/inbox/disable">
								<button
									type="submit"
									class="px-4 py-2 rounded bg-stone-200 hover:bg-stone-300 dark:bg-stone-700 dark:hover:bg-stone-600 text-stone-700 dark:text-stone-300 font-medium"
								>
									disable
								</button>
							</form>
						}
						<details class="mt-6">
							<summary class="cursor-pointer text-sm font-medium text-stone-600 dark:text-stone-400 hover:text-stone-800 dark:hover:text-stone-200">relay metadata settings</summary>
							<div class="mt-4 space-y-6" x-data={ `{inboxName:'` + global.Settings.Inbox.Name + `',inboxDescription:'` + global.Settings.Inbox.Description + `',inboxIcon:'` + global.Settings.Inbox.Icon + `',saved:false,uploadError:null,async saveSettings(){const response=await fetch('/settings',{method:'POST',body:new URLSearchParams(new FormData(this.$refs.form))});if(response.ok){this.saved=true;setTimeout(()=>this.saved=false,2000)}},async uploadIcon(){const file=this.$refs.iconFile.files[0];if(!file)return;this.uploadError='';if(file.size>5*1024*1024){this.uploadError='file must be under 5MB';this.$refs.iconFile.value='';return}if(!['image/png','image/jpeg'].includes(file.type)){this.uploadError='file must be PNG or JPEG';this.$refs.iconFile.value='';return}setTimeout(()=>this.$refs.iconFile.parentNode.submit(),1)}}` }>
								<form method="POST" action="/settings" x-ref="form">
									<div class="space-y-4">
										<div><label class="block text-sm font-medium mb-2 dark:text-stone-300">relay name</label><input type="text" name="inbox_name" placeholder="leave empty to use default" class="w-full px-4 py-2 rounded border border-stone-300 dark:border-stone-600 bg-white dark:bg-stone-700 dark:text-stone-100" x-model="inboxName" @blur="saveSettings()"/></div>
										<div><label class="block text-sm font-medium mb-2 dark:text-stone-300">description</label><textarea name="inbox_description" rows="2" placeholder="leave empty to use default" class="w-full px-4 py-2 rounded border border-stone-300 dark:border-stone-600 bg-white dark:bg-stone-700 dark:text-stone-100" x-model="inboxDescription" @blur="saveSettings()"></textarea></div>
										<div><label class="block text-sm font-medium mb-2 dark:text-stone-300">icon url</label><div class="flex gap-2"><input type="text" name="inbox_icon" placeholder="leave empty to use main icon" class="flex-1 px-4 py-2 rounded border border-stone-300 dark:border-stone-600 bg-white dark:bg-stone-700 dark:text-stone-100" x-model="inboxIcon" @blur="saveSettings()"/><button type="button" @click="$refs.iconFile.click()" class="px-4 py-2 rounded bg-stone-200 hover:bg-stone-300 dark:bg-stone-700 dark:hover:bg-stone-600 text-stone-700 dark:text-stone-300 font-medium">upload</button></div><div x-show="uploadError" x-transition class="text-sm text-red-600 dark:text-red-400 font-medium mt-2" x-text="uploadError"></div></div>
									</div>
									<div x-show="saved" x-transition class="text-sm text-green-600 dark:text-green-400 font-medium">saved!</div>
								</form>
								<form method="POST" action="/upload-relay-icon" enctype="multipart/form-data" class="hidden"><input type="hidden" name="relay" value="inbox"/><input type="file" x-ref="iconFile" @change="uploadIcon()" accept="image/png,image/jpeg" name="file"/></form>
							</div>
						</details>
					</div>
				}
				if global.Settings.Inbox.Enabled {
					<a
						class={
							"inline-flex items-center gap-2 text-white font-semibold px-4 py-2 rounded-xl shadow-lg transform hover:scale-105",
							templ.KV("bg-[var(--accent-color)]", global.Settings.HasThemeColors()),
							templ.KV("bg-blue-500 hover:bg-blue-600", !global.Settings.HasThemeColors()),
						}
						target="_blank"
						href={ global.Settings.BrowseURI }
						x-init="$el.href = $el.href.replace('{url}', encodeURIComponent(location.href.replace('http', 'ws').split('/').slice(0, 4).join('/')))"
					>
						browse inbox â†’
					</a>
				}
			</div>
		</div>
	}
}

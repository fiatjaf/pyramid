package main

import (
	"fiatjaf.com/nostr"

	"github.com/fiatjaf/pyramid/global"
)

templ settingsPage(loggedUser nostr.PubKey) {
	@global.Layout(loggedUser) {
		<div class="max-w-4xl mx-auto">
			<h2 class="text-2xl font-bold mb-6 dark:text-stone-100">settings</h2>
			<form
				method="POST"
				action="/settings"
				class="space-y-6"
				x-data={ `{
				accentColor: '`+global.Settings.AccentColor+`',
				backgroundColor: '`+global.Settings.BackgroundColor+`',
				textColor: '`+global.Settings.TextColor+`',
				saved: false,
				updateTheme() {
					document.documentElement.style.setProperty('--accent-color', this.accentColor);
					document.documentElement.style.setProperty('--bg-color', this.backgroundColor);
					document.documentElement.style.setProperty('--text-color', this.textColor);
				},
				saveSettings(event) {
					setTimeout(async () => {
						const response = await fetch('/settings', {
							method: 'POST',
							body: new URLSearchParams(new FormData(this.$refs.form))
						});
						if (response.ok) {
							this.saved = true;
							setTimeout(() => this.saved = false, 2000);
						}
					}, 1)
				},
				resetTheme() {
					this.accentColor = '';
					this.backgroundColor = '';
					this.textColor = '';
					setTimeout(() => this.$refs.form.submit(), 1)
				},
				enableCustomTheme() {
					function gen (baseLight, baseSat) {
						let h = Math.random() * 360
						let s = (baseSat + Math.random() * 10) / 100
						let l = (baseLight + Math.random() * 10) / 100
						const a = s * Math.min(l, 1 - l)
						const f = n => {
							const k = (n + h / 30) % 12
							const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1)
							return Math.round(255 * color).toString(16).padStart(2, '0')
						}
						return "#" + f(0) + f(8) + f(4)
					}

					this.accentColor = gen(60, 80);
					this.backgroundColor = gen(90, 50);
					this.textColor = gen(30, 60);
					setTimeout(() => this.$refs.form.submit(), 1)
				}
			}` }
				x-init="updateTheme()"
				x-ref="form"
			>
				<!-- Theme Colors Section -->
				<h3 class="text-lg font-semibold mb-4 dark:text-stone-200">theme colors</h3>
				<div class={ "mb-4", templ.KV("hidden", global.Settings.HasThemeColors()) }>
					<button
						type="button"
						@click.prevent="enableCustomTheme()"
						class="px-6 py-2 rounded-lg font-semibold bg-stone-700 hover:bg-stone-800 dark:bg-stone-600 dark:hover:bg-stone-500 text-white shadow-md hover:shadow-lg"
					>
						enable custom theme
					</button>
				</div>
				<div
					class={
						"grid grid-cols-1 md:grid-cols-3 gap-4",
						templ.KV("hidden", !global.Settings.HasThemeColors()),
					}
				>
					<div>
						<label class="block text-sm font-medium mb-2 dark:text-stone-300">accent color</label>
						<input
							type="color"
							name="accent_color"
							x-model="accentColor"
							@input="updateTheme()"
							@blur="saveSettings()"
							class="w-full h-10 rounded border border-stone-300 cursor-pointer"
						/>
					</div>
					<div>
						<label class="block text-sm font-medium mb-2 dark:text-stone-300">background color</label>
						<input
							type="color"
							name="background_color"
							x-model="backgroundColor"
							@input="updateTheme()"
							@blur="saveSettings()"
							class="w-full h-10 rounded border border-stone-300 cursor-pointer"
						/>
					</div>
					<div>
						<label class="block text-sm font-medium mb-2 dark:text-stone-300">text color</label>
						<input
							type="color"
							name="text_color"
							x-model="textColor"
							@input="updateTheme()"
							@blur="saveSettings()"
							class="w-full h-10 rounded border border-stone-300 cursor-pointer"
						/>
					</div>
				</div>
				<div
					class={
						"flex justify-between items-center mt-4",
						templ.KV("hidden", !global.Settings.HasThemeColors()),
					}
				>
					<button
						type="button"
						@click="resetTheme()"
						class="px-4 py-2 text-sm rounded bg-stone-200 hover:bg-stone-300 dark:bg-stone-700 dark:hover:bg-stone-600 text-stone-700 dark:text-stone-300"
					>
						reset
					</button>
					<div
						x-show="saved"
						x-transition
						class="text-sm text-green-600 dark:text-green-400 font-medium"
					>
						saved!
					</div>
				</div>
			</form>
			<form
				method="POST"
				action="/settings"
				class="space-y-6 mt-8"
				x-data={ `{
					browseUri: '` + global.Settings.BrowseURI + `',
					saved: false,
					async saveSettings() {
						const response = await fetch('/settings', {
							method: 'POST',
							body: new URLSearchParams(new FormData(this.$refs.form))
						})
						if (response.ok) {
							this.saved = true;
							setTimeout(() => this.saved = false, 2000)
						}
					}
				}` }
				x-ref="form"
			>
				<!-- Browse Client Setting -->
				<h3 class="text-lg font-semibold mb-4 dark:text-stone-200">browse client url</h3>
				<p class="text-sm text-stone-600 dark:text-stone-400 mb-3">pattern for the "browse" link. use { "{" }url{ "}" } as placeholder for the relay url.</p>
				<input
					type="text"
					name="browse_uri"
					class="w-full px-4 py-2 rounded border border-stone-300 dark:border-stone-600 bg-white dark:bg-stone-700 dark:text-stone-100 mb-3"
					x-model="browseUri"
					@blur="saveSettings()"
				/>
				<div class="flex flex-wrap gap-2 items-center">
					<button
						type="button"
						@mousedown="browseUri = 'https://jumble.social/?r={url}'"
						@mouseup="saveSettings()"
						class="px-3 py-1 text-sm rounded bg-stone-200 hover:bg-stone-300 dark:bg-stone-600 dark:hover:bg-stone-500"
					>
						jumble
					</button>
					<button
						type="button"
						@mousedown="browseUri = 'https://yakihonne.com/r/content?r={url}'"
						@mouseup="saveSettings()"
						class="px-3 py-1 text-sm rounded bg-stone-200 hover:bg-stone-300 dark:bg-stone-600 dark:hover:bg-stone-500"
					>
						yakihonne
					</button>
					<button
						type="button"
						@mousedown="browseUri = 'https://nosotros.app/feed?relay={url}&kind=1&limit=30&type=relayfeed'"
						@mouseup="saveSettings()"
						class="px-3 py-1 text-sm rounded bg-stone-200 hover:bg-stone-300 dark:bg-stone-600 dark:hover:bg-stone-500"
					>
						nosotros
					</button>
					<button
						type="button"
						@mousedown="browseUri = 'https://coracle.social/relays/{url}'"
						@mouseup="saveSettings()"
						class="px-3 py-1 text-sm rounded bg-stone-200 hover:bg-stone-300 dark:bg-stone-600 dark:hover:bg-stone-500"
					>
						coracle
					</button>
					<div
						x-show="saved"
						x-transition
						class="text-sm text-green-600 dark:text-green-400 font-medium ml-auto"
					>
						saved!
					</div>
				</div>
			</form>
			<!-- cleanup Section -->
			<div class="mt-8">
				<h3 class="text-lg font-semibold dark:text-stone-200 mb-3">cleanup</h3>
				<p class="text-sm text-stone-600 dark:text-stone-400 mb-4">
					permanently delete all events from users not in the whitelist.
				</p>
				<a
					href="/cleanup"
					class="inline-block px-4 py-2 rounded bg-stone-700 hover:bg-stone-800 dark:bg-stone-600 dark:hover:bg-stone-500 text-white font-medium"
					onclick="return confirm('are you sure you want to delete all events from non-whitelisted users? this cannot be undone.')"
				>
					clear stuff from excluded users
				</a>
			</div>
		</div>
	}
}
